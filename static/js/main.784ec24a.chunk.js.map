{"version":3,"sources":["assets/beep.mp3","assets/background.jpg","types.ts","yinYogaPoses.ts","util.ts","Timer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","PoseArchetype","Dog","Shoelace","Saddle","Caterpillar","Dragonfly","Twist","yinYogaPoses","archetype","name","isSymmetrical","imageUrl","asTwoDigits","integer","integerString","length","randomElement","array","max","Math","floor","random","SequencePose","startTime","durationSeconds","this","generateSequence","totalDurationMinutes","poses","allPoses","posesByArchetype","groupBy","pose","push","pickOneRandomPoseFromEachArchetype","poseDurationSeconds","halfPoseDurationSeconds","sequence","poseStartTime","TimerWrapper","styled","div","Timer","timerTime","elapsedSeconds","minutes","seconds","elapsedSecondsToTimerTime","beep","require","background","Button","button","AppWrapper","SequenceWrapper","PoseWrapper","isCurrentPose","isPastPose","ImageWrapper","App","useState","isRunning","setIsRunning","setElapsedSeconds","useEffect","interval","setInterval","clearInterval","resetTimer","useCallback","startPause","useTimer","SEQUENCE_DURATION_MINUTES","setSequence","currentPoseIndex","setCurrentPoseIndex","currentPose","useSound","playBeep","reset","nextSequence","i","endTime","map","index","key","totalSeconds","secondsToTimerTime","onClick","src","alt","width","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.784ec24a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.66dd8682.mp3\";","module.exports = __webpack_public_path__ + \"static/media/background.046393f2.jpg\";","export enum PoseArchetype {\n  Dog = \"Dog\",\n  Shoelace = \"Shoelace\",\n  Saddle = \"Saddle\",\n  Caterpillar = \"Caterpillar\",\n  Dragonfly = \"Dragonfly\",\n  Twist = \"Twist\"\n}\n\nexport type Pose = {\n  name: string;\n  imageUrl: string;\n  archetype: PoseArchetype;\n  isSymmetrical: boolean;\n};\n\nexport type SequencePose = {\n  name: string;\n  imageUrl: string;\n  startTime: number;\n  endTime: number;\n  durationSeconds: number;\n};\n\nexport type Sequence = SequencePose[];\n","import { Pose, PoseArchetype } from \"./types\";\nconst { Dog, Shoelace, Saddle, Caterpillar, Dragonfly, Twist } = PoseArchetype;\n\nconst yinYogaPoses: Array<Pose> = [\n  {\n    archetype: Dog,\n    name: \"Puppy\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://cdn.shopify.com/s/files/1/2185/2813/articles/PuppyHeader-1_1200x.progressive.jpg?v=1582928010\"\n  },\n  {\n    archetype: Dog,\n    name: \"Child's Pose\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://cdn.shopify.com/s/files/1/0221/5544/files/Child_s_pose.jpg?2050\"\n  },\n  {\n    archetype: Shoelace,\n    name: \"Shoelace\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479658401195-R2JHUU156WYR4BMOVMNE/ke17ZwdGBToddI8pDm48kKE8Kl1bZ0EYnZDoJ7_8lLhZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpzTJLOlDtbKC2j5_--9sgOhYnPiOoKsDbRyjG4-7JyTWsZz3xh_mhFTz4McKz9WN2A/Shoelace+Yin+Yoga+Pose?format=1500w\"\n  },\n  {\n    archetype: Shoelace,\n    name: \"Square\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479658856640-62KV0IM1QTDAZ38KKZ9A/ke17ZwdGBToddI8pDm48kEOW8aMxGoHrS75ZbhmzPBxZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpx48M_m3Ftx_8mdpRNPnkAOGMw5smZgAAakqOijxdpp3VUnq6fmsShrpAMQf1NgC-k/Square+Pose?format=1500w\"\n  },\n  {\n    archetype: Shoelace,\n    name: \"Pigeon\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/Y06Xk72/Pigeon.png\"\n  },\n  {\n    archetype: Shoelace,\n    name: \"Upright Pigeon\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479659266222-9OMRCXB2571US0EPX9UX/ke17ZwdGBToddI8pDm48kAOlIjh6GsvcH_52Uoetha1Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PINLubpmEDpOGdvU-f2IHA2azejwOAun7LpcaUx6io7soKMshLAGzx4R3EDFOm1kBS/Upward+Swan+Pose?format=1500w\"\n  },\n  {\n    archetype: Shoelace,\n    name: \"Supine Pigeon\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/59528ce9725e256164783faf/1518193148756-MQA9D6WL55V8ZYPNSX03/ke17ZwdGBToddI8pDm48kGm9K2Ph2-1uClUtDVKAxFYUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYy7Mythp_T-mtop-vrsUOmeInPi9iDjx9w8K4ZfjXt2dkoBbQWT0Jng51S9lThM5mwpmlqJC83sE8fjaLzLHJGDZDqXZYzu2fuaodM4POSZ4w/sciatica3.jpg?format=2500w\"\n  },\n  {\n    archetype: Saddle,\n    name: \"Saddle Archer\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://47h07141n4wr3s4gyj49ii1d-wpengine.netdna-ssl.com/wp-content/uploads/2019/11/Cow-Face-Pose-for-Pose-Page-Stock-e1574885530796.jpeg\"\n  },\n  {\n    archetype: Saddle,\n    name: \"Sphinx\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479658732651-J816TFR93K2RFKQN0KN9/ke17ZwdGBToddI8pDm48kFokWAwhPXJr8sAok-y3-PRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIfsRyKqxNI38gxVaQYhajtZbR74nmCtVtrnQUwRok-hkKMshLAGzx4R3EDFOm1kBS/Sphinx+Pose?format=1500w\"\n  },\n  {\n    archetype: Saddle,\n    name: \"Seal\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479657558931-9D4MRBS6P2G1GORYZ28B/ke17ZwdGBToddI8pDm48kEfgAX52CIQMEoivIVGxO11Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIcVBX21mC-kV6oCQSRLtdVjL9vfOvmMcPp10Rp00xvRMKMshLAGzx4R3EDFOm1kBS/YinYoga-Seal-Pose.jpg?format=1500w\"\n  },\n  {\n    archetype: Saddle,\n    name: \"Saddle\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479657338479-XJZ5EQ5O6NEMLQCVBEM0/ke17ZwdGBToddI8pDm48kJLO3MVqsOyPN7Hwd7N_dfVZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIZEDqXdVZ7chneHmqZMM1AyMj4w49-pWfnZlwP3WO1u4KMshLAGzx4R3EDFOm1kBS/YinYoga-Saddle-Pose.jpg?format=1500w\"\n  },\n  {\n    archetype: Saddle,\n    name: \"Half Saddle\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/Dg9Jhgx/Half-Saddle.png\"\n  },\n  {\n    archetype: Saddle,\n    name: \"Dragon\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/bR2Rh2x/Dragon.png\"\n  },\n  // // {\n  // //   archetype: Saddle,\n  // //   name: \"Bridge\",\n  // //   isSymmetrical: true\n  // // },\n  {\n    archetype: Caterpillar,\n    name: \"Caterpillar\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1475253830186-3FUEOJXEDRZDOSBP2QMB/ke17ZwdGBToddI8pDm48kAWnm9UjFoebiGrm5Wm5Z7VZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpycUTlWZaCc-LsHMdveW6uz_GyBrBCw-n95uxJVhIPho-zi7Xd-UHBhM5MuOzm5_Ew/caterpillar-yin-yoga-pose?format=1500w\"\n  },\n  {\n    archetype: Caterpillar,\n    name: \"Butterfly\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479399303286-Q5OHPIITDK3KSH80459R/ke17ZwdGBToddI8pDm48kMQm9aQ7sa6e7ubZW2zqpzBZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpxWBGWzofw9oPtSUYuthKR1ZcOm-sULhUAEN2PEC7xdrgDXgQ128pRGWGqFiQjw3mo/butterfly-yin-yoga-pose?format=1500w\"\n  },\n  {\n    archetype: Caterpillar,\n    name: \"Half Butterfly\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/H7rbyrm/Half-Butterfly.png\"\n  },\n  {\n    archetype: Caterpillar,\n    name: \"Half Shoelace\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/Nr2Cr6G/Half-Shoelace.png\"\n  },\n  {\n    archetype: Caterpillar,\n    name: \"Half Frog\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/LYxv0tC/Half-Frog.png\"\n  },\n  {\n    archetype: Caterpillar,\n    name: \"Snail\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479658603246-7L3CU90MBG3S8VCKO1OE/ke17ZwdGBToddI8pDm48kH4-2QHWSbXDtpWJ22SoT3JZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PISuJXEaT7NlIFdceSofUkFoELUgGRkJb5JevJMJ8rYEEKMshLAGzx4R3EDFOm1kBS/Snail+Pose?format=1500w\"\n  },\n  {\n    archetype: Caterpillar,\n    name: \"Dangling\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479399705287-8WWFFNJ0TDTST4B0QHK5/ke17ZwdGBToddI8pDm48kLSXCMb1bRilJHlxnu09wyhZw-zPPgdn4jUwVcJE1ZvWEtT5uBSRWt4vQZAgTJucoTqqXjS3CfNDSuuf31e0tVELHKVLVrody8NzUkuGk6l0OpvBPm-4gYeV2_7xyLfRQ5GHtObTNYVxKLRA3AHdlmk/dandling-yin-yoga-pose?format=1000w\"\n  },\n  {\n    archetype: Dragonfly,\n    name: \"Dragonfly\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479656553240-DEFMU8DJK7CNFEWPEVV1/ke17ZwdGBToddI8pDm48kEkCSA9_gs9iM4vBTTTTmBNZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIX9ccScF5u3Om1EGDp7kkJjRr0Fv6wT6gNcRxqnqqWp4KMshLAGzx4R3EDFOm1kBS/image-asset.jpeg?format=1500w\"\n  },\n  {\n    archetype: Dragonfly,\n    name: \"Frog\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479656968683-VN1WG5H8I6Y4HGAVETTG/ke17ZwdGBToddI8pDm48kE6RKEcr_5PDNZ1A-5_PR_FZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI8qX71lxtXDpeYVyJQ3edY9K1NmDxkNAYkQX9FUl0SLAKMshLAGzx4R3EDFOm1kBS/frog-yin-yoga-pose?format=1500w\"\n  },\n  {\n    archetype: Dragonfly,\n    name: \"Happy Baby\",\n    isSymmetrical: true,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479659446804-7SS88PFDNORKHZM41BPZ/ke17ZwdGBToddI8pDm48kATjhXVL2XFMnLlNWu0ej1JZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIAaTmv9BzR0_b7fCaD0iSwL-dLXHqIgqQWZ1oxJxFXKwKMshLAGzx4R3EDFOm1kBS/YinYoga-Stir-up-pose.jpg?format=1500w\"\n  },\n  {\n    archetype: Dragonfly,\n    name: \"Full Squat\",\n    isSymmetrical: true,\n    imageUrl: \"https://yogaholism.com/wp-content/uploads/2019/08/Malasana.jpg\"\n  },\n  {\n    archetype: Twist,\n    name: \"Twist\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/MnZRpKr/Twist.png\"\n  },\n  {\n    archetype: Twist,\n    name: \"Tucked Twist\",\n    isSymmetrical: false,\n    imageUrl: \"https://i.ibb.co/2vTFXzR/Tucked-Twist.png\"\n  },\n  {\n    archetype: Twist,\n    name: \"Twisted Roots\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479659763346-EW4G6CMX0KACVTTT4AXB/ke17ZwdGBToddI8pDm48kJXBd9YVvgXdu9dM25-nJ5FZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIsSzbDM-q5CyflgwTFtinqZRfqzdD--T8YBOE7s0g7xgKMshLAGzx4R3EDFOm1kBS/Twisted+Roots+Pose?format=1500w\"\n  },\n  {\n    archetype: Twist,\n    name: \"Cat Tail\",\n    isSymmetrical: false,\n    imageUrl:\n      \"https://images.squarespace-cdn.com/content/v1/57d7315d20099e5bb1ebb737/1479376514749-VUUPT3EX78ALVPGQMWN6/ke17ZwdGBToddI8pDm48kOKjVnZDmOVzcDAjt7ZXEAJZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIstjHJsUTAxw1UjXHoSQO5XbmEuOBnikx_MEvEavQ5NwKMshLAGzx4R3EDFOm1kBS/butterfly-yin-yoga-pose?format=1500w\"\n  }\n];\n\nexport default yinYogaPoses;\n","import groupBy from \"lodash.groupby\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport yinYogaPoses from \"./yinYogaPoses\";\nimport { Pose, Sequence } from \"./types\";\n\nfunction asTwoDigits(integer: number): string {\n  const integerString = `${integer}`;\n  return integerString.length === 1 ? `0${integerString}` : integerString;\n}\n\nexport function elapsedSecondsToTimerTime(elapsedSeconds: number): string {\n  const minutes = Math.floor(elapsedSeconds / 60);\n  const seconds = elapsedSeconds % 60;\n  return `${asTwoDigits(minutes)}:${asTwoDigits(seconds)}`;\n}\n\nexport function secondsToTimerTime(totalSeconds: number) {\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n  return `${minutes}:${asTwoDigits(seconds)}`;\n}\n\nfunction randomInteger(max: number): number {\n  return Math.floor(Math.random() * (max + 1));\n}\n\nfunction randomElement<T>(array: Array<T>): T {\n  return array[randomInteger(array.length - 1)];\n}\n\nfunction pickOneRandomPoseFromEachArchetype(allPoses: Pose[]) {\n  const poses: Pose[] = [];\n  const posesByArchetype = groupBy(allPoses, \"archetype\");\n  for (const archetype in posesByArchetype) {\n    const posesForArchetype = posesByArchetype[archetype];\n    const pose = randomElement(posesForArchetype);\n    poses.push(pose);\n  }\n  return poses;\n}\n\nclass SequencePose {\n  constructor(\n    public name: string,\n    public imageUrl: string,\n    public startTime: number,\n    public durationSeconds: number\n  ) {}\n\n  get endTime(): number {\n    return this.startTime + this.durationSeconds;\n  }\n}\n\nexport function generateSequence(totalDurationMinutes: number): Sequence {\n  const poses = pickOneRandomPoseFromEachArchetype(yinYogaPoses);\n\n  const totalDurationSeconds = totalDurationMinutes * 60;\n  const poseDurationSeconds = totalDurationSeconds / poses.length;\n  const halfPoseDurationSeconds = poseDurationSeconds / 2;\n\n  const sequence = [];\n  let poseStartTime = 0;\n  for (const pose of poses) {\n    if (pose.isSymmetrical) {\n      sequence.push(\n        new SequencePose(\n          pose.name,\n          pose.imageUrl,\n          poseStartTime,\n          poseDurationSeconds\n        )\n      );\n      poseStartTime += poseDurationSeconds;\n    } else {\n      sequence.push(\n        new SequencePose(\n          `${pose.name} (Right)`,\n          pose.imageUrl,\n          poseStartTime,\n          halfPoseDurationSeconds\n        )\n      );\n      poseStartTime += halfPoseDurationSeconds;\n      sequence.push(\n        new SequencePose(\n          `${pose.name} (Left)`,\n          pose.imageUrl,\n          poseStartTime,\n          halfPoseDurationSeconds\n        )\n      );\n      poseStartTime += halfPoseDurationSeconds;\n    }\n  }\n  return sequence;\n}\n\nexport function useTimer(durationSeconds: number) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedSeconds, setElapsedSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isRunning && elapsedSeconds < durationSeconds) {\n        setElapsedSeconds(elapsedSeconds + 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [elapsedSeconds, durationSeconds, isRunning]);\n\n  const resetTimer = useCallback(() => {\n    setIsRunning(false);\n    setElapsedSeconds(0);\n  }, []);\n\n  const startPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  return [elapsedSeconds, isRunning, startPause, resetTimer] as const;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { elapsedSecondsToTimerTime } from \"./util\";\n\nconst TimerWrapper = styled.div`\n  font-size: 96px;\n  font-family: \"Roboto Mono\", monospace;\n`;\n\nexport default function Timer({ elapsedSeconds }: { elapsedSeconds: number }) {\n  const timerTime = elapsedSecondsToTimerTime(elapsedSeconds);\n\n  return <TimerWrapper>{timerTime}</TimerWrapper>;\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport useSound from \"use-sound\";\nimport Timer from \"./Timer\";\nimport { Sequence } from \"./types\";\nimport { generateSequence, secondsToTimerTime, useTimer } from \"./util\";\nimport \"./App.css\";\nconst beep = require(\"./assets/beep.mp3\");\nconst background = require(\"./assets/background.jpg\");\n\nconst SEQUENCE_DURATION_MINUTES = 18;\n\nconst Button = styled.button`\n  margin-right: 5px;\n`;\n\nconst AppWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 10px;\n  background-image: url(${background});\n  height: 100vh;\n`;\n\nconst SequenceWrapper = styled.div`\n  margin: 10px;\n`;\n\ntype PoseWrapperProps = {\n  isCurrentPose: boolean;\n  isPastPose: boolean;\n};\n\nconst PoseWrapper = styled.div`\n  font-size: ${({ isCurrentPose }: PoseWrapperProps) =>\n    isCurrentPose ? \"32px\" : \"16px\"};\n  color: ${({ isPastPose }: PoseWrapperProps) =>\n    isPastPose ? \"gray\" : \"black\"};\n  line-height: 1.3;\n`;\n\nconst ImageWrapper = styled.div`\n  margin-top: 25px;\n`;\n\nfunction App() {\n  const [elapsedSeconds, isRunning, startPause, resetTimer] = useTimer(\n    SEQUENCE_DURATION_MINUTES * 60\n  );\n  const [sequence, setSequence] = useState<Sequence>(\n    generateSequence(SEQUENCE_DURATION_MINUTES)\n  );\n  const [currentPoseIndex, setCurrentPoseIndex] = useState(0);\n  const currentPose = sequence[currentPoseIndex];\n  const [playBeep] = useSound(beep);\n\n  const reset = useCallback(() => {\n    setCurrentPoseIndex(0);\n    resetTimer();\n  }, [resetTimer]);\n\n  const nextSequence = useCallback(() => {\n    setSequence(generateSequence(SEQUENCE_DURATION_MINUTES));\n    reset();\n  }, [reset]);\n\n  useEffect(() => {\n    if (isRunning) {\n      for (let i = 0; i < sequence.length; i++) {\n        const pose = sequence[i];\n        if (\n          pose !== currentPose &&\n          elapsedSeconds >= pose.startTime &&\n          elapsedSeconds < pose.endTime\n        ) {\n          setCurrentPoseIndex(i);\n          playBeep();\n        } else if (\n          i === sequence.length - 1 &&\n          elapsedSeconds >= pose.endTime\n        ) {\n          playBeep();\n          reset();\n        }\n      }\n    }\n  }, [elapsedSeconds, isRunning, sequence, currentPose, playBeep, reset]);\n\n  return (\n    <AppWrapper>\n      <div>\n        <div>\n          <Timer elapsedSeconds={elapsedSeconds} />\n          <SequenceWrapper>\n            {sequence.map((pose, index) => (\n              <PoseWrapper\n                key={pose.name}\n                isCurrentPose={index === currentPoseIndex}\n                isPastPose={index < currentPoseIndex}\n              >\n                {pose.name} - {secondsToTimerTime(pose.durationSeconds)}\n              </PoseWrapper>\n            ))}\n          </SequenceWrapper>\n          <Button onClick={startPause}>{isRunning ? \"Pause\" : \"Start\"}</Button>\n          <Button onClick={reset}>Reset</Button>\n          <Button onClick={nextSequence}>Next Sequence</Button>\n        </div>\n      </div>\n      <ImageWrapper>\n        <img src={currentPose.imageUrl} alt={currentPose.name} width={350} />\n      </ImageWrapper>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}